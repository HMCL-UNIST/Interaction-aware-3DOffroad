#!/usr/bin/env python
PACKAGE = "pvti_offroad"
import roslib; roslib.load_manifest(PACKAGE)
from math import pi
from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()
gen.add("logging_vehicle_states", bool_t, 0, "logging_vehicle_states", False) ## used with data generation script
gen.add("clear_buffer", bool_t, 0, "Clear logging buffer", True) ## used with data generation script
gen.add("save_now", bool_t, 0, "save_now", False) ## used with data generation script
gen.add("sim_reset", bool_t, 0, "sim_reset", False) ## used with data generation script
gen.add("reset_to_init", bool_t, 0, "reset_to_init", False) ## used with data generation script 
gen.add("tree_respwan", bool_t, 0, "tree_respwan", False) ## used with data generation script


gen.add("dist_heuristic_cost_scale", double_t, 0, "dist_heuristic_cost_scale", 3.0, 0, 100.0) 
gen.add("rollover_cost_scale", double_t, 0, "rollover_cost_scale", 0.0, 0, 100.0)
gen.add("model_error_weight", double_t, 0, "model_error_weight", 0.0, 0, 100.0)
gen.add("local_map_cost_weight", double_t, 0, "local_map_cost_weight", 5.0, 0, 100.0)
gen.add("error_std_scale", double_t, 0, "error_std_scale", 0.64, 0, 1.0)
gen.add("error_mean_scale", double_t, 0, "error_mean_scale", 0.12, 0, 1.0)


gen.add("ax", double_t, 0, "ax", 0.0, -3.0, 3.0) ## used with data generation script
gen.add("delta", double_t, 0, "rollover_cost_scale", 0.0, -0.25, 0.25)  ## used with data generation script
gen.add("input_select_idx", int_t, 0, "input_select_idx", 0, 0, 19) # select a input stream during data geneation


exit(gen.generate(PACKAGE, "pvti_offroad", "predictorDyn"))